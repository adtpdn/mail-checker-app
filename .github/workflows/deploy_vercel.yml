name: Deploy Mail Checker to Vercel

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      deployment_note:
        description: 'Deployment notes'
        required: false
        default: 'Manual deployment'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      DEPLOY_TIMESTAMP: ${{ format('YYYY-MM-DD HH:mm:ss UTC', github.event.repository.updated_at) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Create/Update .env file
        run: |
          echo "# Environment variables created on CI: $(date -u +"%Y-%m-%d %H:%M:%S UTC")" > .env
          echo "VERCEL_TOKEN=${{ secrets.VERCEL_TOKEN }}" >> .env
          echo "NODE_ENV=production" >> .env
          echo "DEPLOY_USERNAME=${{ github.actor }}" >> .env
          echo "DEPLOY_TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> .env
          echo "DEPLOY_REF=${{ github.ref }}" >> .env
          
          # Safely show .env file content without exposing secrets
          echo "Created .env file with the following keys:"
          grep -v "VERCEL_TOKEN" .env | cat

      - name: Install dependencies
        run: npm ci

      - name: Configure Vercel CLI
        run: |
          # Create Vercel config file
          mkdir -p .vercel
          echo '{"projectId":"${{ secrets.VERCEL_PROJECT_ID }}","orgId":"${{ secrets.VERCEL_ORG_ID }}"}' > .vercel/project.json
          
          # Setup authentication
          export VERCEL_TOKEN="${{ secrets.VERCEL_TOKEN }}"

      - name: Deploy to Vercel
        run: |
          # Deploy using the Vercel CLI with the token from .env file
          npx vercel@latest --prod --yes --token="$(grep VERCEL_TOKEN .env | cut -d '=' -f2)"
          
          echo "Deployment completed at $(date -u +"%Y-%m-%d %H:%M:%S UTC")"
          echo "Deployed by: ${{ github.actor }}"